
import "UnityEngine"

-- unit test
function main()

	local Vector3 = UnityEngine.Vector3
	local v=Vector3(0,0,0)
	v.y=2
	assert(v.x==0)
	assert(v.y==2)
	assert(v.y==2 and v[2]==2)
	local x1=Vector3.RotateTowards(Vector3.up,Vector3.right,0.45,0.2)
	local x2=Vector3.__raw.RotateTowards(Vector3.up,Vector3.right,0.45,0.2)
	assert(x1==x2)

	local v1=Vector3.MoveTowards(Vector3.zero,Vector3.one,0.3)
	local v2=Vector3.__raw.MoveTowards(Vector3.zero,Vector3.one,0.3)
	assert(v1==v2)
	assert(-v1+v2==Vector3.zero)

	local n1,t1=Vector3(0.5,1,1),Vector3(1,0.5,0.5)
	Vector3.OrthoNormalize(n1,t1)
	local n2,t2=Vector3(0.5,1,1),Vector3(1,0.5,0.5)
	n2,t2=Vector3.__raw.OrthoNormalize(n2,t2)
	print(n1,n2,t1,t2)
	assert(n1==n2)
	assert(t1==t2)

	local n1,t1,b1=Vector3(0.5,1,1),Vector3(1,0.5,0.5),Vector3(1,2,0)
	Vector3.OrthoNormalize(n1,t1,b1)
	local n2,t2,b2=Vector3(0.5,1,1),Vector3(1,0.5,0.5),Vector3(1,2,0)
	n2,t2,b2=Vector3.__raw.OrthoNormalize(n2,t2,b2)
	print(n1,n2,t1,t2,b1,b2)
	assert(n1==n2)
	assert(t1==t2)
	assert(b1==b2)

	local currentV=Vector3(0,0.1,0)
	local v4=Vector3.SmoothDamp(Vector3.zero,Vector3.up,currentV,5)
	print(v4,currentV)

	local r=Vector3.Reflect(Vector3(0.5,0.5,0),Vector3.up)
	local r2=Vector3.__raw.Reflect(Vector3(0.5,0.5,0),Vector3.up)
	print(r,r2)
	assert(r==r2)

	local r=Vector3.ProjectOnPlane(Vector3(0.5,0.5,0),Vector3.up)
	local r2=Vector3.__raw.ProjectOnPlane(Vector3(0.5,0.5,0),Vector3.up)
	print(r,r2)
	assert(r==r2)

	local r=Vector3.Slerp(Vector3.up,Vector3.zero,0.5)
	local r2=Vector3.__raw.Slerp(Vector3.up,Vector3.zero,0.5)
	assert(r==r2)

	local r=Vector3.Slerp(Vector3.up,Vector3(0.5,-1,0),0.1)
	local r2=Vector3.__raw.Slerp(Vector3.up,Vector3(0.5,-1,0),0.1)
	assert(r==r2)

	local st=os.clock()
	for i=1,200000 do
		local r=Vector3.Slerp(Vector3.up,Vector3.down,0.1)
	end
	print("slerp time",os.clock()-st)
	local st=os.clock()
	for i=1,200000 do
		local r2=Vector3.__raw.Slerp(Vector3.up,Vector3.down,0.1)
	end
	print("slerp raw time",os.clock()-st)
end